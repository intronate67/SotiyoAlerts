//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
//
//     Produced by Entity Framework Visual Editor v4.1.2.0
//     Source:                    https://github.com/msawczyn/EFDesigner
//     Visual Studio Marketplace: https://marketplace.visualstudio.com/items?itemName=michaelsawczyn.EFDesigner
//     Documentation:             https://msawczyn.github.io/EFDesigner/
//     License (MIT):             https://github.com/msawczyn/EFDesigner/blob/master/LICENSE
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Linq;
using System.Runtime.CompilerServices;

namespace SotiyoAlerts.Data.Models
{
	/// <summary>
	/// Servers that are (or have previously) used the bot.
	/// </summary>
	/// <remarks>
	/// Contains all the servers that the bot has ever joined including ones that it has
	/// left.
	/// </remarks>
	[System.ComponentModel.Description("Servers that are (or have previously) used the bot.")]
	public partial class Guild
	{
		partial void Init();

		/// <summary>
		/// Default constructor. Protected due to required properties, but present because EF needs it.
		/// </summary>
		protected Guild()
		{
			Channels = new System.Collections.Generic.HashSet<global::SotiyoAlerts.Data.Models.Channel>();

			Init();
		}

		/// <summary>
		/// Replaces default constructor, since it's protected. Caller assumes responsibility for setting all required values before saving.
		/// </summary>
		public static Guild CreateGuildUnsafe()
		{
			return new Guild();
		}

		/// <summary>
		/// Public constructor with required data
		/// </summary>
		/// <param name="id">Discord Server (Guild) ID</param>
		/// <param name="name">Discord Server Name</param>
		/// <param name="isactive">Is guild actively using the bot</param>
		/// <param name="isdeleted">Is the bot still in the server</param>
		/// <param name="createtime">Database create time</param>
		public Guild(long id, string name, bool isactive, bool isdeleted, DateTime createtime)
		{
			this.Id = id;

			if (string.IsNullOrEmpty(name)) throw new ArgumentNullException(nameof(name));
			this.Name = name;

			this.IsActive = isactive;

			this.IsDeleted = isdeleted;

			this.CreateTime = createtime;

			Channels = new System.Collections.Generic.HashSet<global::SotiyoAlerts.Data.Models.Channel>();
			Init();
		}

		/// <summary>
		/// Static create function (for use in LINQ queries, etc.)
		/// </summary>
		/// <param name="id">Discord Server (Guild) ID</param>
		/// <param name="name">Discord Server Name</param>
		/// <param name="isactive">Is guild actively using the bot</param>
		/// <param name="isdeleted">Is the bot still in the server</param>
		/// <param name="createtime">Database create time</param>
		public static Guild Create(long id, string name, bool isactive, bool isdeleted, DateTime createtime)
		{
			return new Guild(id, name, isactive, isdeleted, createtime);
		}

		/*************************************************************************
		 * Properties
		 *************************************************************************/

		/// <summary>
		/// Required
		/// Database create time
		/// </summary>
		[Required]
		[System.ComponentModel.Description("Database create time")]
		public DateTime CreateTime { get; set; }

		/// <summary>
		/// Identity, Indexed, Required
		/// Discord Server (Guild) ID
		/// </summary>
		[Key]
		[Required]
		[System.ComponentModel.Description("Discord Server (Guild) ID")]
		public long Id { get; set; }

		/// <summary>
		/// Required
		/// Is guild actively using the bot
		/// </summary>
		/// <remarks>
		/// Is the bot still enabled on the server (not left).
		/// </remarks>
		[Required]
		[System.ComponentModel.Description("Is guild actively using the bot")]
		public bool IsActive { get; set; }

		/// <summary>
		/// Required
		/// Is the bot still in the server
		/// </summary>
		/// <remarks>
		/// Has the bot left the server originally registered.
		/// </remarks>
		[Required]
		[System.ComponentModel.Description("Is the bot still in the server")]
		public bool IsDeleted { get; set; }

		/// <summary>
		/// Database last modified time
		/// </summary>
		[System.ComponentModel.Description("Database last modified time")]
		public DateTime? ModifiedTime { get; set; }

		/// <summary>
		/// Required, Max length = 100
		/// Discord Server Name
		/// </summary>
		[Required]
		[MaxLength(100)]
		[StringLength(100)]
		[System.ComponentModel.Description("Discord Server Name")]
		public string Name { get; set; }

		/*************************************************************************
		 * Navigation properties
		 *************************************************************************/

		public virtual ICollection<global::SotiyoAlerts.Data.Models.Channel> Channels { get; private set; }

	}
}

