//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
//
//     Produced by Entity Framework Visual Editor v4.1.2.0
//     Source:                    https://github.com/msawczyn/EFDesigner
//     Visual Studio Marketplace: https://marketplace.visualstudio.com/items?itemName=michaelsawczyn.EFDesigner
//     Documentation:             https://msawczyn.github.io/EFDesigner/
//     License (MIT):             https://github.com/msawczyn/EFDesigner/blob/master/LICENSE
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Linq;
using System.Runtime.CompilerServices;

namespace SotiyoAlerts.Data.Models
{
	/// <summary>
	/// Filters for channels
	/// </summary>
	/// <remarks>
	/// Contains which filters are applied to each channel.
	/// </remarks>
	[System.ComponentModel.Description("Filters for channels")]
	public partial class ChannelFilter
	{
		partial void Init();

		/// <summary>
		/// Default constructor. Protected due to required properties, but present because EF needs it.
		/// </summary>
		protected ChannelFilter()
		{
			Init();
		}

		/// <summary>
		/// Replaces default constructor, since it's protected. Caller assumes responsibility for setting all required values before saving.
		/// </summary>
		public static ChannelFilter CreateChannelFilterUnsafe()
		{
			return new ChannelFilter();
		}

		/// <summary>
		/// Public constructor with required data
		/// </summary>
		/// <param name="filterid">Filter type ID</param>
		/// <param name="subfilterid">Sub filter identifier</param>
		/// <param name="channelid">Discord channel ID</param>
		/// <param name="isactive">Is the filter active</param>
		/// <param name="isdeleted">Is the filtered removed</param>
		/// <param name="createtime">Database create time</param>
		/// <param name="filter"></param>
		/// <param name="channel"></param>
		public ChannelFilter(long filterid, long subfilterid, long channelid, bool isactive, bool isdeleted, DateTime createtime, global::SotiyoAlerts.Data.Models.Filter filter, global::SotiyoAlerts.Data.Models.Channel channel)
		{
			this.FilterId = filterid;

			this.SubFilterId = subfilterid;

			this.ChannelId = channelid;

			this.IsActive = isactive;

			this.IsDeleted = isdeleted;

			this.CreateTime = createtime;

			if (filter == null) throw new ArgumentNullException(nameof(filter));
			this.Filter = filter;
			filter.ChannelFilters.Add(this);

			if (channel == null) throw new ArgumentNullException(nameof(channel));
			this.Channel = channel;
			channel.ChannelFilters.Add(this);

			Init();
		}

		/// <summary>
		/// Static create function (for use in LINQ queries, etc.)
		/// </summary>
		/// <param name="filterid">Filter type ID</param>
		/// <param name="subfilterid">Sub filter identifier</param>
		/// <param name="channelid">Discord channel ID</param>
		/// <param name="isactive">Is the filter active</param>
		/// <param name="isdeleted">Is the filtered removed</param>
		/// <param name="createtime">Database create time</param>
		/// <param name="filter"></param>
		/// <param name="channel"></param>
		public static ChannelFilter Create(long filterid, long subfilterid, long channelid, bool isactive, bool isdeleted, DateTime createtime, global::SotiyoAlerts.Data.Models.Filter filter, global::SotiyoAlerts.Data.Models.Channel channel)
		{
			return new ChannelFilter(filterid, subfilterid, channelid, isactive, isdeleted, createtime, filter, channel);
		}

		/*************************************************************************
		 * Properties
		 *************************************************************************/

		/// <summary>
		/// Required
		/// Discord channel ID
		/// </summary>
		[Required]
		[System.ComponentModel.Description("Discord channel ID")]
		public long ChannelId { get; set; }

		/// <summary>
		/// Required
		/// Database create time
		/// </summary>
		[Required]
		[System.ComponentModel.Description("Database create time")]
		public DateTime CreateTime { get; set; }

		/// <summary>
		/// Required
		/// Filter type ID
		/// </summary>
		[Required]
		[System.ComponentModel.Description("Filter type ID")]
		public long FilterId { get; set; }

		/// <summary>
		/// Identity, Indexed, Required
		/// Unique identifier
		/// </summary>
		[Key]
		[Required]
		[System.ComponentModel.Description("Unique identifier")]
		public long Id { get; set; }

		/// <summary>
		/// Required
		/// Is the filter active
		/// </summary>
		/// <remarks>
		/// Has the filter been disabled in the channel
		/// </remarks>
		[Required]
		[System.ComponentModel.Description("Is the filter active")]
		public bool IsActive { get; set; }

		/// <summary>
		/// Required
		/// Is the filtered removed
		/// </summary>
		/// <remarks>
		/// Has the filtered been removed by a user in the specified channel.
		/// </remarks>
		[Required]
		[System.ComponentModel.Description("Is the filtered removed")]
		public bool IsDeleted { get; set; }

		/// <summary>
		/// Database last modified time
		/// </summary>
		[System.ComponentModel.Description("Database last modified time")]
		public DateTime? ModifiedTime { get; set; }

		/// <summary>
		/// Indexed, Required
		/// Sub filter identifier
		/// </summary>
		[Required]
		[System.ComponentModel.Description("Sub filter identifier")]
		public long SubFilterId { get; set; }

		/*************************************************************************
		 * Navigation properties
		 *************************************************************************/

		/// <summary>
		/// Required
		/// </summary>
		public virtual global::SotiyoAlerts.Data.Models.Channel Channel { get; set; }

		/// <summary>
		/// Required
		/// </summary>
		public virtual global::SotiyoAlerts.Data.Models.Filter Filter { get; set; }

	}
}

