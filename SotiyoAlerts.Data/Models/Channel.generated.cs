//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
//
//     Produced by Entity Framework Visual Editor v4.1.2.0
//     Source:                    https://github.com/msawczyn/EFDesigner
//     Visual Studio Marketplace: https://marketplace.visualstudio.com/items?itemName=michaelsawczyn.EFDesigner
//     Documentation:             https://msawczyn.github.io/EFDesigner/
//     License (MIT):             https://github.com/msawczyn/EFDesigner/blob/master/LICENSE
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Linq;
using System.Runtime.CompilerServices;

namespace SotiyoAlerts.Data.Models
{
	/// <summary>
	/// Channels that have (or had previously) active filters
	/// </summary>
	[System.ComponentModel.Description("Channels that have (or had previously) active filters")]
	public partial class Channel
	{
		partial void Init();

		/// <summary>
		/// Default constructor. Protected due to required properties, but present because EF needs it.
		/// </summary>
		protected Channel()
		{
			ChannelFilters = new System.Collections.Generic.HashSet<global::SotiyoAlerts.Data.Models.ChannelFilter>();

			Init();
		}

		/// <summary>
		/// Replaces default constructor, since it's protected. Caller assumes responsibility for setting all required values before saving.
		/// </summary>
		public static Channel CreateChannelUnsafe()
		{
			return new Channel();
		}

		/// <summary>
		/// Public constructor with required data
		/// </summary>
		/// <param name="id">Discord Channel ID</param>
		/// <param name="guildid">Discord server (guild) ID</param>
		/// <param name="name">Channel Name</param>
		/// <param name="createtime">Database create time</param>
		/// <param name="guild"></param>
		public Channel(long id, long guildid, string name, DateTime createtime, global::SotiyoAlerts.Data.Models.Guild guild)
		{
			this.Id = id;

			this.GuildId = guildid;

			if (string.IsNullOrEmpty(name)) throw new ArgumentNullException(nameof(name));
			this.Name = name;

			this.CreateTime = createtime;

			if (guild == null) throw new ArgumentNullException(nameof(guild));
			this.Guild = guild;
			guild.Channels.Add(this);

			ChannelFilters = new System.Collections.Generic.HashSet<global::SotiyoAlerts.Data.Models.ChannelFilter>();
			Init();
		}

		/// <summary>
		/// Static create function (for use in LINQ queries, etc.)
		/// </summary>
		/// <param name="id">Discord Channel ID</param>
		/// <param name="guildid">Discord server (guild) ID</param>
		/// <param name="name">Channel Name</param>
		/// <param name="createtime">Database create time</param>
		/// <param name="guild"></param>
		public static Channel Create(long id, long guildid, string name, DateTime createtime, global::SotiyoAlerts.Data.Models.Guild guild)
		{
			return new Channel(id, guildid, name, createtime, guild);
		}

		/*************************************************************************
		 * Properties
		 *************************************************************************/

		/// <summary>
		/// Required
		/// Database create time
		/// </summary>
		[Required]
		[System.ComponentModel.Description("Database create time")]
		public DateTime CreateTime { get; set; }

		/// <summary>
		/// Required
		/// Discord server (guild) ID
		/// </summary>
		[Required]
		[System.ComponentModel.Description("Discord server (guild) ID")]
		public long GuildId { get; set; }

		/// <summary>
		/// Identity, Indexed, Required
		/// Discord Channel ID
		/// </summary>
		[Key]
		[Required]
		[System.ComponentModel.Description("Discord Channel ID")]
		public long Id { get; set; }

		/// <summary>
		/// Database last modified time
		/// </summary>
		[System.ComponentModel.Description("Database last modified time")]
		public DateTime? ModifiedTime { get; set; }

		/// <summary>
		/// Required, Max length = 100
		/// Channel Name
		/// </summary>
		[Required]
		[MaxLength(100)]
		[StringLength(100)]
		[System.ComponentModel.Description("Channel Name")]
		public string Name { get; set; }

		/*************************************************************************
		 * Navigation properties
		 *************************************************************************/

		public virtual ICollection<global::SotiyoAlerts.Data.Models.ChannelFilter> ChannelFilters { get; private set; }

		/// <summary>
		/// Required
		/// </summary>
		public virtual global::SotiyoAlerts.Data.Models.Guild Guild { get; set; }

	}
}

